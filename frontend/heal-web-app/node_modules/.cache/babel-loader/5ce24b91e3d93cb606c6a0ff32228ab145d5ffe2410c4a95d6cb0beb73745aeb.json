{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nathan\\\\Documents\\\\GitHub\\\\healph-test\\\\frontend\\\\heal-web-app\\\\src\\\\pages\\\\mealviewer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Sidebar from \"../components/sidebar\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport MealViewerTable from \"../components/intakes_mealstable\";\nimport SearchBar from \"../components/searchbar\";\nimport HamburgerMenu from \"../components/hamburgermenu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst currentDate = new Date();\nconst formattedDate = currentDate.toISOString().split('T')[0];\nconst MealViewer = () => {\n  _s();\n  // Sample data\n  const dataTemplate = {\n    Mealid: 0,\n    Date: formattedDate,\n    Fats: 0,\n    Carbohydrates: 0,\n    Protein: 0,\n    Foodwaste: 0,\n    Foodcombination: ['a', 'b', 'c'],\n    Description: \"Lorem ipsum\"\n  };\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n  const data = Array.from({\n    length: 30\n  }, (_, index) => ({\n    ...dataTemplate,\n    Mealid: index + 1,\n    Date: formattedDate,\n    Fats: Math.floor(Math.random() * 11),\n    Carbohydrates: Math.floor(Math.random() * 11),\n    Protein: Math.floor(Math.random() * 11),\n    Foodwaste: Math.floor(Math.random() * 11)\n  }));\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 2,\n        children: /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 10,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(HamburgerMenu, {\n            isMenuOpen: isMenuOpen,\n            onToggleMenu: toggleMenu\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              marginTop: \"20px\",\n              marginBottom: \"20px\",\n              color: \"#9FC856\",\n              fontWeight: \"600\"\n            },\n            children: \"Meal Viewer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MealViewerTable, {\n            data: data,\n            type: 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(MealViewer, \"vK10R+uCyHfZ4DZVnxbYkMWJB8g=\");\n_c = MealViewer;\nexport default MealViewer;\nvar _c;\n$RefreshReg$(_c, \"MealViewer\");","map":{"version":3,"names":["React","useState","Sidebar","Container","Row","Col","MealViewerTable","SearchBar","HamburgerMenu","jsxDEV","_jsxDEV","currentDate","Date","formattedDate","toISOString","split","MealViewer","_s","dataTemplate","Mealid","Fats","Carbohydrates","Protein","Foodwaste","Foodcombination","Description","isMenuOpen","setIsMenuOpen","toggleMenu","data","Array","from","length","_","index","Math","floor","random","fluid","children","md","fileName","_jsxFileName","lineNumber","columnNumber","onToggleMenu","style","marginTop","marginBottom","color","fontWeight","type","_c","$RefreshReg$"],"sources":["C:/Users/Nathan/Documents/GitHub/healph-test/frontend/heal-web-app/src/pages/mealviewer.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Sidebar from \"../components/sidebar\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport MealViewerTable from \"../components/intakes_mealstable\";\r\nimport SearchBar from \"../components/searchbar\";\r\nimport HamburgerMenu from \"../components/hamburgermenu\";\r\n\r\nconst currentDate = new Date();\r\nconst formattedDate = currentDate.toISOString().split('T')[0];\r\n\r\nconst MealViewer = () => {\r\n  // Sample data\r\n  const dataTemplate = {\r\n    Mealid: 0,\r\n    Date: formattedDate,\r\n    Fats: 0,\r\n    Carbohydrates: 0,\r\n    Protein: 0,\r\n    Foodwaste: 0,\r\n    Foodcombination: ['a','b','c'],\r\n    Description:\"Lorem ipsum\",\r\n  };\r\n\r\n\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false); \r\n\r\n  const toggleMenu = () => {\r\n    setIsMenuOpen(!isMenuOpen);\r\n  };\r\n  \r\n  const data = Array.from({ length: 30 }, (_, index) => ({\r\n    ...dataTemplate,\r\n    Mealid: index + 1,\r\n    Date: formattedDate,\r\n    Fats: Math.floor(Math.random() * 11),\r\n    Carbohydrates: Math.floor(Math.random() * 11),\r\n    Protein: Math.floor(Math.random() * 11),\r\n    Foodwaste: Math.floor(Math.random() * 11),\r\n  }));\r\n\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col md={2}>\r\n          <Sidebar />\r\n        </Col>\r\n        <Col md={10}>\r\n          <div>\r\n            <HamburgerMenu isMenuOpen={isMenuOpen} onToggleMenu={toggleMenu} /> \r\n            <h2 style={{marginTop:\"20px\",marginBottom:\"20px\",color:\"#9FC856\",fontWeight:\"600\"}}>Meal Viewer</h2>\r\n            <SearchBar/>\r\n            <MealViewerTable data={data} type={1} />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MealViewer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}