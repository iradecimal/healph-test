{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nathan\\\\Documents\\\\GitHub\\\\healph-test\\\\frontend\\\\heal-web-app\\\\src\\\\pages\\\\dailyintakes.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Sidebar from \"../components/sidebar\";\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\nimport DailyIntakeTable from \"../components/dailyintaketable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dailyintakes = () => {\n  _s();\n  // ... (previous code remains unchanged)\n\n  const [searchTerm, setSearchTerm] = useState(\"\"); // State to hold the search term\n\n  // Function to handle search term change\n  const handleSearchChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  // Filter the data based on the search term\n  const filteredData = data.filter(item => Object.values(item).some(value => value.toLowerCase().includes(searchTerm.toLowerCase())));\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 2,\n        children: /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 10,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Form, {\n            inline: true,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"searchBar\",\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Search...\",\n                value: searchTerm,\n                onChange: handleSearchChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: () => setSearchTerm(\"\"),\n              children: \"Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DailyIntakeTable, {\n            data: filteredData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }, this);\n};\n_s(Dailyintakes, \"+YdqPTpSlp4r5CWiFEQiF/UjThM=\");\n_c = Dailyintakes;\nexport default Dailyintakes;\nvar _c;\n$RefreshReg$(_c, \"Dailyintakes\");","map":{"version":3,"names":["React","useState","Sidebar","Container","Row","Col","Form","Button","DailyIntakeTable","jsxDEV","_jsxDEV","Dailyintakes","_s","searchTerm","setSearchTerm","handleSearchChange","event","target","value","filteredData","data","filter","item","Object","values","some","toLowerCase","includes","fluid","children","md","fileName","_jsxFileName","lineNumber","columnNumber","inline","Group","controlId","Control","type","placeholder","onChange","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Nathan/Documents/GitHub/healph-test/frontend/heal-web-app/src/pages/dailyintakes.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Sidebar from \"../components/sidebar\";\r\nimport { Container, Row, Col, Form , Button} from \"react-bootstrap\";\r\nimport DailyIntakeTable from \"../components/dailyintaketable\";\r\n\r\nconst Dailyintakes = () => {\r\n    // ... (previous code remains unchanged)\r\n  \r\n    const [searchTerm, setSearchTerm] = useState(\"\"); // State to hold the search term\r\n  \r\n    // Function to handle search term change\r\n    const handleSearchChange = (event) => {\r\n      setSearchTerm(event.target.value);\r\n    };\r\n  \r\n    // Filter the data based on the search term\r\n    const filteredData = data.filter((item) =>\r\n      Object.values(item).some((value) =>\r\n        value.toLowerCase().includes(searchTerm.toLowerCase())\r\n      )\r\n    );\r\n  \r\n    return (\r\n      <Container fluid>\r\n        <Row>\r\n          <Col md={2}>\r\n            <Sidebar />\r\n          </Col>\r\n          <Col md={10}>\r\n            <div>\r\n              {/* Search Bar with Search Button */}\r\n              <Form inline>\r\n                <Form.Group controlId=\"searchBar\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Search...\"\r\n                    value={searchTerm}\r\n                    onChange={handleSearchChange}\r\n                  />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" onClick={() => setSearchTerm(\"\")}>\r\n                  Clear\r\n                </Button>\r\n              </Form>\r\n              {/* Daily Intake Table */}\r\n              <DailyIntakeTable data={filteredData} />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  };\r\n  \r\n  export default Dailyintakes;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}