{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nathan\\\\Documents\\\\GitHub\\\\healph-test\\\\frontend\\\\heal-web-app\\\\src\\\\pages\\\\dailyintakes.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Sidebar from \"../components/sidebar\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport DailyIntakeTable from \"../components/dailyintaketable\";\nimport SearchBar from \"../components/searchbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DailyIntakes = () => {\n  _s();\n  // Sample data\n  const dataTemplate = {\n    Userid: \"Data\",\n    Date: \"Data\",\n    Hrsofsleep: \"Data\",\n    Glassesofwater: \"Data\",\n    Stepstaken: \"Data\",\n    Caloricintake: \"Data\",\n    Caloricdiversity: \"Data\",\n    HALE: \"Data\",\n    PHD: \"Data\",\n    Mealid: \"Data\"\n  };\n  const initialData = Array.from({\n    length: 15\n  }, () => ({\n    ...dataTemplate\n  }));\n  const [data, setData] = useState(initialData);\n  const [sortBy, setSortBy] = useState({\n    column: \"\",\n    order: \"asc\"\n  });\n  const handleSort = column => {\n    setSortBy(prevSortBy => {\n      if (prevSortBy.column === column) {\n        // If the same column is clicked again, toggle the sorting order\n        return {\n          ...prevSortBy,\n          order: prevSortBy.order === \"asc\" ? \"desc\" : \"asc\"\n        };\n      } else {\n        // If a new column is clicked, sort in ascending order\n        return {\n          column: column,\n          order: \"asc\"\n        };\n      }\n    });\n  };\n  const sortedData = React.useMemo(() => {\n    if (sortBy.column === \"\") return data;\n    return [...data].sort((a, b) => {\n      const columnA = a[sortBy.column];\n      const columnB = b[sortBy.column];\n      if (sortBy.order === \"asc\") {\n        return columnA.localeCompare(columnB);\n      } else {\n        return columnB.localeCompare(columnA);\n      }\n    });\n  }, [data, sortBy]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 2,\n        children: /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 10,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              marginTop: \"20px\",\n              marginBottom: \"20px\",\n              color: \"#9FC856\",\n              fontWeight: \"600\"\n            },\n            children: \"Daily Intakes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DailyIntakeTable, {\n            data: sortedData,\n            onSort: handleSort\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(DailyIntakes, \"wVyRLqZCyjm5wLZo0bVmrjvGCsU=\");\n_c = DailyIntakes;\nexport default DailyIntakes;\nvar _c;\n$RefreshReg$(_c, \"DailyIntakes\");","map":{"version":3,"names":["React","useState","Sidebar","Container","Row","Col","DailyIntakeTable","SearchBar","jsxDEV","_jsxDEV","DailyIntakes","_s","dataTemplate","Userid","Date","Hrsofsleep","Glassesofwater","Stepstaken","Caloricintake","Caloricdiversity","HALE","PHD","Mealid","initialData","Array","from","length","data","setData","sortBy","setSortBy","column","order","handleSort","prevSortBy","sortedData","useMemo","sort","a","b","columnA","columnB","localeCompare","fluid","children","md","fileName","_jsxFileName","lineNumber","columnNumber","style","marginTop","marginBottom","color","fontWeight","onSort","_c","$RefreshReg$"],"sources":["C:/Users/Nathan/Documents/GitHub/healph-test/frontend/heal-web-app/src/pages/dailyintakes.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Sidebar from \"../components/sidebar\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport DailyIntakeTable from \"../components/dailyintaketable\";\r\nimport SearchBar from \"../components/searchbar\";\r\n\r\nconst DailyIntakes = () => {\r\n  // Sample data\r\n  const dataTemplate = {\r\n    Userid: \"Data\",\r\n    Date: \"Data\",\r\n    Hrsofsleep: \"Data\",\r\n    Glassesofwater: \"Data\",\r\n    Stepstaken: \"Data\",\r\n    Caloricintake: \"Data\",\r\n    Caloricdiversity: \"Data\",\r\n    HALE: \"Data\",\r\n    PHD: \"Data\",\r\n    Mealid: \"Data\",\r\n  };\r\n\r\n  const initialData = Array.from({ length: 15 }, () => ({ ...dataTemplate }));\r\n\r\n  const [data, setData] = useState(initialData);\r\n  const [sortBy, setSortBy] = useState({ column: \"\", order: \"asc\" });\r\n\r\n  const handleSort = (column) => {\r\n    setSortBy((prevSortBy) => {\r\n      if (prevSortBy.column === column) {\r\n        // If the same column is clicked again, toggle the sorting order\r\n        return {\r\n          ...prevSortBy,\r\n          order: prevSortBy.order === \"asc\" ? \"desc\" : \"asc\",\r\n        };\r\n      } else {\r\n        // If a new column is clicked, sort in ascending order\r\n        return {\r\n          column: column,\r\n          order: \"asc\",\r\n        };\r\n      }\r\n    });\r\n  };\r\n\r\n  const sortedData = React.useMemo(() => {\r\n    if (sortBy.column === \"\") return data;\r\n    return [...data].sort((a, b) => {\r\n      const columnA = a[sortBy.column];\r\n      const columnB = b[sortBy.column];\r\n      if (sortBy.order === \"asc\") {\r\n        return columnA.localeCompare(columnB);\r\n      } else {\r\n        return columnB.localeCompare(columnA);\r\n      }\r\n    });\r\n  }, [data, sortBy]);\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col md={2}>\r\n          <Sidebar />\r\n        </Col>\r\n        <Col md={10}>\r\n          <div>\r\n            <h2 style={{ marginTop: \"20px\", marginBottom: \"20px\", color: \"#9FC856\", fontWeight: \"600\" }}>Daily Intakes</h2>\r\n            <SearchBar />\r\n            <DailyIntakeTable data={sortedData} onSort={handleSort} />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DailyIntakes;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}